type ZoneNode {
  id: ID!
  name: String
}

type AddressNode {
  id: ID!
  streetName: String
  streetNumber: Int
  streetNameSv: String
  city: String
  citySv: String
  postalCode: String

}

type CustomerNode {
  firstName: String!
  lastName: String!
  nationalIdNumber: String
  primaryAddress: AddressNode
}

type VehicleNode {
  manufacturer: String!
  model: String!
  registrationNumber: String!
}

enum ParkingPermitStatus {
  DRAFT
  VALID
  CANCELLED
  EXPIRED
}

type PermitNode {
  identifier: Int!
  customer: CustomerNode!
  vehicle: VehicleNode
  parkingZone: ZoneNode
  status: ParkingPermitStatus!
  startTime: String
  endTime: String
}

type PageInfo {
  numPages: Int!
  page: Int!
  next: Int
  prev: Int
}

type PagedPermits {
  objects: [PermitNode]
  pageInfo: PageInfo
}

enum OrderDirection {
  ASC,
  DESC
}

input PageInput {
  page: Int!
  pageSize: Int
}

input OrderByInput {
  field: String!
  orderFields: [String]!
  orderDirection: OrderDirection!
}

input SearchItem {
  matchType: String!
  fields: [String]!
  value: String!
}

type PermitDetailNode {
  identifier: Int!
  customer: CustomerNode!
  vehicle: VehicleNode
  parkingZone: ZoneNode
  status: ParkingPermitStatus!
  startTime: String
  endTime: String
}

type Query {
  permits(
    pageInput: PageInput!
    orderBy: OrderByInput
    searchItems: [SearchItem]
   ): PagedPermits!
  permitDetail(permitId: ID!): PermitDetailNode!
}
