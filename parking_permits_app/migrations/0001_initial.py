# Generated by Django 3.2 on 2021-06-08 07:52

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('street_name', models.CharField(max_length=128, verbose_name='Street name')),
                ('street_number', models.CharField(max_length=128, verbose_name='Street number')),
                ('city', models.CharField(max_length=128, verbose_name='City')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Location (2D)')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('contract_type', models.CharField(choices=[('FIXED_PERIOD', 'Fixed period'), ('OPEN_ENDED', 'Open ended')], max_length=16, verbose_name='Contract type')),
                ('month_count', models.IntegerField(blank=True, null=True, verbose_name='Month count')),
            ],
            options={
                'verbose_name': 'Contract type',
                'verbose_name_plural': 'Contract types',
                'db_table': 'contract_type',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=32, verbose_name='First name')),
                ('last_name', models.CharField(max_length=32, verbose_name='Last name')),
                ('email', models.CharField(blank=True, max_length=128, null=True, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='Phone number')),
                ('terms_of_use_accepted', models.BooleanField(default=False)),
                ('other_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customers_other_address', to='parking_permits_app.address', verbose_name='Other address')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='DrivingClass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('class_name', models.CharField(max_length=32, verbose_name='Driving class name')),
                ('identifier', models.CharField(max_length=32, verbose_name='Driving class identifier')),
            ],
            options={
                'verbose_name': 'Driving class',
                'verbose_name_plural': 'Driving classes',
                'db_table': 'driving_class',
            },
        ),
        migrations.CreateModel(
            name='ParkingZone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('location', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326, verbose_name='Area (2D)')),
            ],
            options={
                'verbose_name': 'Parking zone',
                'verbose_name_plural': 'Parking zones',
                'db_table': 'parking_zone',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('common_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=32, verbose_name='Product name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Product price')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Vehicle type',
                'verbose_name_plural': 'Vehicle types',
                'db_table': 'vehicle_type',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('category', models.CharField(choices=[('M1', 'M1'), ('M2', 'M2'), ('N1', 'N1'), ('N2', 'N2'), ('L3e', 'L3e'), ('L4e', 'L4e'), ('L5e', 'L5e'), ('L6e', 'L6e')], max_length=16, verbose_name='Vehicle category')),
                ('manufacturer', models.CharField(max_length=32, verbose_name='Vehicle manufacturer')),
                ('model', models.CharField(max_length=32, verbose_name='Vehicle model')),
                ('production_year', models.IntegerField(verbose_name='Vehicle production_year')),
                ('registration_number', models.CharField(max_length=24, verbose_name='Vehicle registration number')),
                ('emission', models.IntegerField(verbose_name='Emission')),
                ('last_inspection_date', models.DateField(verbose_name='Last inspection date')),
                ('holder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles_holder', to='parking_permits_app.customer', verbose_name='Holder')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles_owner', to='parking_permits_app.customer', verbose_name='Owner')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.vehicletype', verbose_name='Vehicle type')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'vehicle',
            },
        ),
        migrations.CreateModel(
            name='ParkingPermit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='End')),
                ('contract_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.contracttype', verbose_name='Contract type')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.customer', verbose_name='Customer')),
                ('parking_zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.parkingzone', verbose_name='Parking zone')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.product', verbose_name='Product')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.vehicle', verbose_name='Vehicle')),
            ],
            options={
                'verbose_name': 'Parking permit',
                'verbose_name_plural': 'Parking permits',
                'db_table': 'parking_permit',
            },
        ),
        migrations.CreateModel(
            name='LowEmissionCriteria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('emission_limit_nedc', models.IntegerField(blank=True, null=True, verbose_name='Emission limit (NEDC)')),
                ('emission_limit_wltp', models.IntegerField(blank=True, null=True, verbose_name='Emission limit (WLTP)')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.vehicletype', verbose_name='Vehicle type')),
            ],
            options={
                'verbose_name': 'Low-emission criteria',
                'verbose_name_plural': 'Low-emission criterias',
                'db_table': 'low_emission_criteria',
            },
        ),
        migrations.CreateModel(
            name='DrivingLicence',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('valid_start', models.DateTimeField(verbose_name='Valid start')),
                ('valid_end', models.DateTimeField(verbose_name='Valid end')),
                ('active', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.customer', verbose_name='Customer')),
                ('driving_classes', models.ManyToManyField(to='parking_permits_app.DrivingClass')),
            ],
            options={
                'verbose_name': 'Driving licence',
                'verbose_name_plural': 'Driving licences',
                'db_table': 'driving_licence',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='parking_zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.parkingzone', verbose_name='Parking zone'),
        ),
        migrations.AddField(
            model_name='customer',
            name='primary_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customers_primary_address', to='parking_permits_app.address', verbose_name='Primary address'),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, verbose_name='Company name')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.address', verbose_name='Address')),
                ('company_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parking_permits_app.customer', verbose_name='Company owner')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'db_table': 'company',
            },
        ),
    ]
