name: Continuous Integration

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEBUG: True
      DATABASE_URL: postgis://postgres:postgres@localhost/parking-permits
      DJANGO_SECRET_KEY: test-secret
      DJANGO_SETTINGS_MODULE: project.settings_test
    services:
        postgres:
            image: postgis/postgis:13-3.3
            env:
                POSTGRES_HOST_AUTH_METHOD: trust
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
            ports:
                - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Required by Sonar
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.9"
      - name: Install required Ubuntu packages
        run: |
          sudo apt-get install gdal-bin
      - name: Install PyPI dependencies
        run: |
          python -m pip install --upgrade pip
          pip install codecov -r requirements.txt
          pip install -r requirements-test.txt
      - name: Run Python side code neatness tests
        run: |
          flake8
          black --check .
          isort . -c

      - name: Run pytest code functionality tests
        run: |
          pytest -ra -vvv --cov=.

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

      # Without this workaround Sonar reports a warning about an incorrect source path
      - name: Override coverage report source path for Sonar
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
