# Generated by Django 3.2.13 on 2022-05-02 17:15

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "street_name",
                    models.CharField(max_length=128, verbose_name="Street name"),
                ),
                (
                    "street_name_sv",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Street name sv"
                    ),
                ),
                (
                    "street_number",
                    models.CharField(max_length=128, verbose_name="Street number"),
                ),
                ("city", models.CharField(max_length=128, verbose_name="City")),
                (
                    "city_sv",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="City sv"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=5, verbose_name="Postal code"
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326, verbose_name="Location (2D)"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="Start date"),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End date"),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "source_system",
                    models.CharField(
                        blank=True,
                        choices=[("HELSINKI_PROFILE", "Helsinki Profile")],
                        max_length=50,
                        verbose_name="Source system",
                    ),
                ),
                (
                    "source_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Source id"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="First name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="Last name"
                    ),
                ),
                (
                    "national_id_number",
                    models.CharField(
                        blank=True,
                        max_length=16,
                        unique=True,
                        verbose_name="National identification number",
                    ),
                ),
                (
                    "email",
                    models.CharField(blank=True, max_length=128, verbose_name="Email"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="Phone number"
                    ),
                ),
                (
                    "address_security_ban",
                    models.BooleanField(
                        default=False, verbose_name="Address security ban"
                    ),
                ),
                (
                    "driver_license_checked",
                    models.BooleanField(
                        default=False, verbose_name="Driver's license checked"
                    ),
                ),
                (
                    "other_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="customers_other_address",
                        to="parking_permits.address",
                        verbose_name="Other address",
                    ),
                ),
                (
                    "primary_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="customers_primary_address",
                        to="parking_permits.address",
                        verbose_name="Primary address",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
            },
        ),
        migrations.CreateModel(
            name="DrivingClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "identifier",
                    models.CharField(max_length=32, verbose_name="Identifier"),
                ),
            ],
            options={
                "verbose_name": "Driving class",
                "verbose_name_plural": "Driving classes",
            },
        ),
        migrations.CreateModel(
            name="LowEmissionCriteria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "power_type",
                    models.CharField(
                        choices=[
                            ("ELECTRIC", "Electric"),
                            ("BENSIN", "Bensin"),
                            ("DIESEL", "Diesel"),
                            ("BIFUEL", "Bifuel"),
                        ],
                        max_length=50,
                        verbose_name="Power type",
                    ),
                ),
                (
                    "nedc_max_emission_limit",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="NEDC maximum emission limit",
                    ),
                ),
                (
                    "wltp_max_emission_limit",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="WLTP maximum emission limit",
                    ),
                ),
                (
                    "euro_min_class_limit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Euro minimum class limit"
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start date")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End date"),
                ),
            ],
            options={
                "verbose_name": "Low-emission criteria",
                "verbose_name_plural": "Low-emission criterias",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "talpa_order_id",
                    models.UUIDField(
                        blank=True,
                        editable=False,
                        null=True,
                        unique=True,
                        verbose_name="Talpa order id",
                    ),
                ),
                (
                    "talpa_checkout_url",
                    models.URLField(blank=True, verbose_name="Talpa checkout url"),
                ),
                (
                    "talpa_receipt_url",
                    models.URLField(blank=True, verbose_name="Talpa receipt_url"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=50,
                        verbose_name="Order status",
                    ),
                ),
                (
                    "paid_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Paid time"
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="parking_permits.customer",
                        verbose_name="Customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
            },
        ),
        migrations.CreateModel(
            name="ParkingZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "name",
                    models.CharField(max_length=128, unique=True, verbose_name="Name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "description_sv",
                    models.TextField(blank=True, verbose_name="Description sv"),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        srid=4326, verbose_name="Area (2D)"
                    ),
                ),
            ],
            options={
                "verbose_name": "Parking zone",
                "verbose_name_plural": "Parking zones",
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "power_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ELECTRIC", "Electric"),
                            ("BENSIN", "Bensin"),
                            ("DIESEL", "Diesel"),
                            ("BIFUEL", "Bifuel"),
                        ],
                        max_length=50,
                        verbose_name="Power type",
                    ),
                ),
                (
                    "vehicle_class",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M1", "M1"),
                            ("M2", "M2"),
                            ("N1", "N1"),
                            ("N2", "N2"),
                            ("L3e-A1", "L3e-A1"),
                            ("L3e-A2", "L3e-A2"),
                            ("L3e-A3", "L3e-A3"),
                            ("L3e-A1E", "L3e-A1E"),
                            ("L3e-A2E", "L3e-A2E"),
                            ("L3e-A3E", "L3e-A3E"),
                            ("L3e-A1T", "L3e-A1T"),
                            ("L3e-A2T", "L3e-A2T"),
                            ("L3e-A3T", "L3e-A3T"),
                            ("L4e", "L4e"),
                            ("L5e-A", "L5e-A"),
                            ("L5e-B", "L5e-B"),
                            ("L6e-A", "L6e-A"),
                            ("L6e-B", "L6e-B"),
                            ("L6e-BP", "L6e-BP"),
                            ("L6e-BU", "L6e-BU"),
                        ],
                        max_length=16,
                        verbose_name="VehicleClass",
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(max_length=100, verbose_name="Manufacturer"),
                ),
                ("model", models.CharField(max_length=100, verbose_name="Model")),
                (
                    "registration_number",
                    models.CharField(
                        max_length=24, unique=True, verbose_name="Registration number"
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        default=0, verbose_name="Total weigh of vehicle"
                    ),
                ),
                (
                    "euro_class",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Euro class"
                    ),
                ),
                (
                    "emission",
                    models.IntegerField(blank=True, null=True, verbose_name="Emission"),
                ),
                ("consent_low_emission_accepted", models.BooleanField(default=False)),
                (
                    "emission_type",
                    models.CharField(
                        choices=[("NEDC", "NEDC"), ("WLTP", "WLTP")],
                        default="WLTP",
                        max_length=16,
                        verbose_name="Emission type",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Serial number"
                    ),
                ),
                (
                    "last_inspection_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Last inspection date"
                    ),
                ),
                (
                    "updated_from_traficom_on",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Update from traficom on",
                    ),
                ),
                (
                    "users",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=15),
                        default=list,
                        size=None,
                    ),
                ),
            ],
            options={
                "verbose_name": "Vehicle",
                "verbose_name_plural": "Vehicles",
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "talpa_subscription_id",
                    models.UUIDField(
                        blank=True,
                        editable=False,
                        null=True,
                        unique=True,
                        verbose_name="Talpa subscription id",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CONFIRMED", "Confirmed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start date")),
                ("end_date", models.DateField(verbose_name="End date")),
                (
                    "period_unit",
                    models.CharField(max_length=20, verbose_name="Period unit"),
                ),
                (
                    "period_frequency",
                    models.IntegerField(verbose_name="Period frequency"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parking_permits.customer",
                        verbose_name="Customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
            },
        ),
        migrations.CreateModel(
            name="Refund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=200, verbose_name="Name"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=6,
                        verbose_name="Amount",
                    ),
                ),
                ("iban", models.CharField(blank=True, max_length=30)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("IN_PROGRESS", "In progress"),
                            ("ACCEPTED", "Accepted"),
                        ],
                        default="OPEN",
                        max_length=32,
                        verbose_name="Status",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="refund",
                        to="parking_permits.order",
                        verbose_name="Permit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Refund",
                "verbose_name_plural": "Refunds",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "talpa_product_id",
                    models.UUIDField(
                        blank=True,
                        editable=False,
                        null=True,
                        unique=True,
                        verbose_name="Talpa product id",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("COMPANY", "Company"), ("RESIDENT", "Resident")],
                        default="RESIDENT",
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start date")),
                ("end_date", models.DateField(verbose_name="End date")),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Unit price"
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[("MONTHLY", "Monthly"), ("PIECES", "Pieces")],
                        default="MONTHLY",
                        max_length=50,
                        verbose_name="Unit",
                    ),
                ),
                (
                    "vat",
                    models.DecimalField(
                        decimal_places=4, max_digits=6, verbose_name="VAT"
                    ),
                ),
                (
                    "low_emission_discount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        verbose_name="Low emission discount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified by",
                    ),
                ),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="parking_permits.parkingzone",
                        verbose_name="zone",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="ParkingPermit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("RESIDENT", "Resident"), ("COMPANY", "Company")],
                        default="RESIDENT",
                        max_length=32,
                        verbose_name="Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ARRIVED", "Arrived"),
                            ("PROCESSING", "Processing"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                            ("PAYMENT_IN_PROGRESS", "Payment in progress"),
                            ("VALID", "Valid"),
                            ("CLOSED", "Closed"),
                        ],
                        default="DRAFT",
                        max_length=32,
                        verbose_name="Status",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Start time"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="End time"
                    ),
                ),
                ("primary_vehicle", models.BooleanField(default=True)),
                ("vehicle_changed", models.BooleanField(default=False)),
                (
                    "vehicle_changed_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Vehicle changed date"
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("FIXED_PERIOD", "Fixed period"),
                            ("OPEN_ENDED", "Open ended"),
                        ],
                        default="OPEN_ENDED",
                        max_length=16,
                        verbose_name="Contract type",
                    ),
                ),
                (
                    "start_type",
                    models.CharField(
                        choices=[("IMMEDIATELY", "Immediately"), ("FROM", "From")],
                        default="IMMEDIATELY",
                        max_length=16,
                        verbose_name="Start type",
                    ),
                ),
                (
                    "month_count",
                    models.IntegerField(default=1, verbose_name="Month count"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="permits",
                        to="parking_permits.address",
                        verbose_name="Address",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="permits",
                        to="parking_permits.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "parking_zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parking_permits.parkingzone",
                        verbose_name="Parking zone",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parking_permits.vehicle",
                        verbose_name="Vehicle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parking permit",
                "verbose_name_plural": "Parking permits",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "talpa_order_item_id",
                    models.UUIDField(
                        blank=True,
                        editable=False,
                        null=True,
                        unique=True,
                        verbose_name="Talpa order item id",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Unit price"
                    ),
                ),
                (
                    "payment_unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=6,
                        verbose_name="Payment unit price",
                    ),
                ),
                (
                    "vat",
                    models.DecimalField(
                        decimal_places=4, max_digits=6, verbose_name="VAT"
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="Quantity")),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="Start date"),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End date"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="parking_permits.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "permit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="parking_permits.parkingpermit",
                        verbose_name="Parking permit",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parking_permits.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order item",
                "verbose_name_plural": "Order items",
            },
        ),
        migrations.AddField(
            model_name="order",
            name="permits",
            field=models.ManyToManyField(
                related_name="orders",
                to="parking_permits.ParkingPermit",
                verbose_name="permits",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="subscription",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="parking_permits.subscription",
                verbose_name="Subscription",
            ),
        ),
        migrations.CreateModel(
            name="DrivingLicence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                ("start_date", models.DateField(verbose_name="Start date")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End date"),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="driving_licence",
                        to="parking_permits.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "driving_classes",
                    models.ManyToManyField(to="parking_permits.DrivingClass"),
                ),
            ],
            options={
                "verbose_name": "Driving licence",
                "verbose_name_plural": "Driving licences",
            },
        ),
        migrations.AddField(
            model_name="customer",
            name="zone",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="parking_permits.parkingzone",
                verbose_name="Zone",
            ),
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Company name")),
                (
                    "business_id",
                    models.CharField(max_length=32, verbose_name="Business Id"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parking_permits.address",
                        verbose_name="Address",
                    ),
                ),
                (
                    "company_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parking_permits.customer",
                        verbose_name="Company owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
            },
        ),
        migrations.AddField(
            model_name="address",
            name="_zone",
            field=models.ForeignKey(
                blank=True,
                db_column="zone",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="parking_permits.parkingzone",
                verbose_name="Zone",
            ),
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Time modified"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Price"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("COMPANY", "Company"), ("RESIDENT", "Resident")],
                        default="RESIDENT",
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="Year")),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="prices",
                        to="parking_permits.parkingzone",
                        verbose_name="Zone",
                    ),
                ),
            ],
            options={
                "verbose_name": "Price",
                "verbose_name_plural": "Prices",
                "unique_together": {("zone", "type", "year")},
            },
        ),
    ]
